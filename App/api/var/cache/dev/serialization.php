<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App_Entity_Persona' => 0,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
            clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
            clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Persona',
                    'id',
                    'dni',
                    'nombre',
                    'apellidos',
                    'fechaDelRegistro',
                    'edad',
                    'peso',
                    'talla',
                ],
                'attributesMetadata' => [
                    [
                        'id' => $o[1],
                        'dni' => $o[2],
                        'nombre' => $o[3],
                        'apellidos' => $o[4],
                        'fechaDelRegistro' => $o[5],
                        'edad' => $o[6],
                        'peso' => $o[7],
                        'talla' => $o[8],
                    ],
                ],
                'groups' => [
                    1 => [
                        'persona',
                    ],
                    [
                        'persona',
                    ],
                    [
                        'persona',
                    ],
                    [
                        'persona',
                    ],
                    [
                        'persona',
                    ],
                    [
                        'persona',
                    ],
                    [
                        'persona',
                    ],
                    [
                        'persona',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
